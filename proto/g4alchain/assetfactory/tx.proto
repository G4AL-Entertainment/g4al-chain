syntax = "proto3";
package g4alentertainment.g4alchain.assetfactory;

import "g4alchain/assetfactory/class.proto";
// this line is used by starport scaffolding # proto/tx/import

option go_package = "github.com/G4AL-Entertainment/g4al-chain/x/assetfactory/types";

// Msg defines the Msg service.
service Msg {
  rpc CreateClass(MsgCreateClass) returns (MsgCreateClassResponse);
  rpc UpdateClass(MsgUpdateClass) returns (MsgUpdateClassResponse);
    rpc MintNft(MsgMintNft) returns (MsgMintNftResponse);
  rpc UpdateNft(MsgUpdateNft) returns (MsgUpdateNftResponse);
  rpc BurnNft(MsgBurnNft) returns (MsgBurnNftResponse);
  rpc TransferNft(MsgTransferNft) returns (MsgTransferNftResponse);
// this line is used by starport scaffolding # proto/tx/rpc
}

message MsgCreateClass {
  string creator = 1;
  string symbol = 2;

  string project = 3;
  int32 maxSupply = 4;
  bool canChangeMaxSupply = 5;
  string name = 6;
  string description = 7;
  string uri = 8;
  string uri_hash = 9;
  string data = 10;
}
message MsgCreateClassResponse {}

message MsgUpdateClass {
  string creator = 1;
  string symbol = 2;

  int32 maxSupply = 3;
  string name = 4;
  string description = 5;
  string uri = 6;
  string uri_hash = 7;
  string data = 8;

}
message MsgUpdateClassResponse {}

message MsgMintNft {
  string creator = 1;
  string project = 2;
  string symbol = 3;
  string uri = 4;
  string uriHash = 5;
  string data = 6;
  string receiver = 7;
}

message MsgMintNftResponse {
}

message MsgUpdateNft {
  string creator = 1;
  string symbol = 2;
  string id = 3;
  string uri = 4;
  string uriHash = 5;
  string data = 6;
}

message MsgUpdateNftResponse {
}

message MsgBurnNft {
  string creator = 1;
  string symbol = 2;
  string id = 3;
}

message MsgBurnNftResponse {
}

message MsgTransferNft {
  string creator = 1;
  string symbol = 2;
  string id = 3;
  string receiver = 4;
}

message MsgTransferNftResponse {
}

// this line is used by starport scaffolding # proto/tx/message
