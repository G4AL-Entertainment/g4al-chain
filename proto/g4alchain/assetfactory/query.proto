syntax = "proto3";
package g4alentertainment.g4alchain.assetfactory;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "g4alchain/assetfactory/params.proto";
import "g4alchain/assetfactory/class.proto";
// this line is used by starport scaffolding # 1

option go_package = "github.com/G4AL-Entertainment/g4al-chain/x/assetfactory/types";

// Query defines the gRPC querier service.
service Query {
  // Parameters queries the parameters of the module.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/G4AL-Entertainment/g4al-chain/assetfactory/params";
  }
  // Queries a Class by index.
	rpc Class(QueryGetClassRequest) returns (QueryGetClassResponse) {
		option (google.api.http).get = "/G4AL-Entertainment/g4al-chain/assetfactory/class/{symbol}";
	}

	// Queries a list of Class items.
	rpc ClassAll(QueryAllClassRequest) returns (QueryAllClassResponse) {
		option (google.api.http).get = "/G4AL-Entertainment/g4al-chain/assetfactory/class";
	}

// this line is used by starport scaffolding # 2
}

// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false];
}

message QueryGetClassRequest {
	  string symbol = 1;

}

message QueryGetClassResponse {
	Class class = 1 [(gogoproto.nullable) = false];
}

message QueryAllClassRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllClassResponse {
	repeated Class class = 1 [(gogoproto.nullable) = false];
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

// this line is used by starport scaffolding # 3
