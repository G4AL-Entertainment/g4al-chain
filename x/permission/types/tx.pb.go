// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: g4alchain/permission/tx.proto

package types

import (
	context "context"
	fmt "fmt"
	grpc1 "github.com/gogo/protobuf/grpc"
	proto "github.com/gogo/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type MsgCreateAdministrator struct {
	Creator   string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Address   string `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	CreatedAt int32  `protobuf:"varint,3,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt int32  `protobuf:"varint,4,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	Blocked   bool   `protobuf:"varint,5,opt,name=blocked,proto3" json:"blocked,omitempty"`
}

func (m *MsgCreateAdministrator) Reset()         { *m = MsgCreateAdministrator{} }
func (m *MsgCreateAdministrator) String() string { return proto.CompactTextString(m) }
func (*MsgCreateAdministrator) ProtoMessage()    {}
func (*MsgCreateAdministrator) Descriptor() ([]byte, []int) {
	return fileDescriptor_82914fe0b56a4e8c, []int{0}
}
func (m *MsgCreateAdministrator) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateAdministrator) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateAdministrator.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateAdministrator) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateAdministrator.Merge(m, src)
}
func (m *MsgCreateAdministrator) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateAdministrator) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateAdministrator.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateAdministrator proto.InternalMessageInfo

func (m *MsgCreateAdministrator) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCreateAdministrator) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *MsgCreateAdministrator) GetCreatedAt() int32 {
	if m != nil {
		return m.CreatedAt
	}
	return 0
}

func (m *MsgCreateAdministrator) GetUpdatedAt() int32 {
	if m != nil {
		return m.UpdatedAt
	}
	return 0
}

func (m *MsgCreateAdministrator) GetBlocked() bool {
	if m != nil {
		return m.Blocked
	}
	return false
}

type MsgCreateAdministratorResponse struct {
}

func (m *MsgCreateAdministratorResponse) Reset()         { *m = MsgCreateAdministratorResponse{} }
func (m *MsgCreateAdministratorResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateAdministratorResponse) ProtoMessage()    {}
func (*MsgCreateAdministratorResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_82914fe0b56a4e8c, []int{1}
}
func (m *MsgCreateAdministratorResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateAdministratorResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateAdministratorResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateAdministratorResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateAdministratorResponse.Merge(m, src)
}
func (m *MsgCreateAdministratorResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateAdministratorResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateAdministratorResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateAdministratorResponse proto.InternalMessageInfo

type MsgUpdateAdministrator struct {
	Creator   string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Address   string `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	CreatedAt int32  `protobuf:"varint,3,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt int32  `protobuf:"varint,4,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	Blocked   bool   `protobuf:"varint,5,opt,name=blocked,proto3" json:"blocked,omitempty"`
}

func (m *MsgUpdateAdministrator) Reset()         { *m = MsgUpdateAdministrator{} }
func (m *MsgUpdateAdministrator) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateAdministrator) ProtoMessage()    {}
func (*MsgUpdateAdministrator) Descriptor() ([]byte, []int) {
	return fileDescriptor_82914fe0b56a4e8c, []int{2}
}
func (m *MsgUpdateAdministrator) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateAdministrator) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateAdministrator.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateAdministrator) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateAdministrator.Merge(m, src)
}
func (m *MsgUpdateAdministrator) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateAdministrator) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateAdministrator.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateAdministrator proto.InternalMessageInfo

func (m *MsgUpdateAdministrator) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgUpdateAdministrator) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *MsgUpdateAdministrator) GetCreatedAt() int32 {
	if m != nil {
		return m.CreatedAt
	}
	return 0
}

func (m *MsgUpdateAdministrator) GetUpdatedAt() int32 {
	if m != nil {
		return m.UpdatedAt
	}
	return 0
}

func (m *MsgUpdateAdministrator) GetBlocked() bool {
	if m != nil {
		return m.Blocked
	}
	return false
}

type MsgUpdateAdministratorResponse struct {
}

func (m *MsgUpdateAdministratorResponse) Reset()         { *m = MsgUpdateAdministratorResponse{} }
func (m *MsgUpdateAdministratorResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateAdministratorResponse) ProtoMessage()    {}
func (*MsgUpdateAdministratorResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_82914fe0b56a4e8c, []int{3}
}
func (m *MsgUpdateAdministratorResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateAdministratorResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateAdministratorResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateAdministratorResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateAdministratorResponse.Merge(m, src)
}
func (m *MsgUpdateAdministratorResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateAdministratorResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateAdministratorResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateAdministratorResponse proto.InternalMessageInfo

type MsgDeleteAdministrator struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Address string `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
}

func (m *MsgDeleteAdministrator) Reset()         { *m = MsgDeleteAdministrator{} }
func (m *MsgDeleteAdministrator) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteAdministrator) ProtoMessage()    {}
func (*MsgDeleteAdministrator) Descriptor() ([]byte, []int) {
	return fileDescriptor_82914fe0b56a4e8c, []int{4}
}
func (m *MsgDeleteAdministrator) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteAdministrator) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteAdministrator.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteAdministrator) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteAdministrator.Merge(m, src)
}
func (m *MsgDeleteAdministrator) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteAdministrator) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteAdministrator.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteAdministrator proto.InternalMessageInfo

func (m *MsgDeleteAdministrator) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgDeleteAdministrator) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

type MsgDeleteAdministratorResponse struct {
}

func (m *MsgDeleteAdministratorResponse) Reset()         { *m = MsgDeleteAdministratorResponse{} }
func (m *MsgDeleteAdministratorResponse) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteAdministratorResponse) ProtoMessage()    {}
func (*MsgDeleteAdministratorResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_82914fe0b56a4e8c, []int{5}
}
func (m *MsgDeleteAdministratorResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteAdministratorResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteAdministratorResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteAdministratorResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteAdministratorResponse.Merge(m, src)
}
func (m *MsgDeleteAdministratorResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteAdministratorResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteAdministratorResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteAdministratorResponse proto.InternalMessageInfo

type MsgCreateDeveloper struct {
	Creator   string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Address   string `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	CreatedAt int32  `protobuf:"varint,3,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt int32  `protobuf:"varint,4,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	Blocked   bool   `protobuf:"varint,5,opt,name=blocked,proto3" json:"blocked,omitempty"`
}

func (m *MsgCreateDeveloper) Reset()         { *m = MsgCreateDeveloper{} }
func (m *MsgCreateDeveloper) String() string { return proto.CompactTextString(m) }
func (*MsgCreateDeveloper) ProtoMessage()    {}
func (*MsgCreateDeveloper) Descriptor() ([]byte, []int) {
	return fileDescriptor_82914fe0b56a4e8c, []int{6}
}
func (m *MsgCreateDeveloper) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateDeveloper) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateDeveloper.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateDeveloper) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateDeveloper.Merge(m, src)
}
func (m *MsgCreateDeveloper) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateDeveloper) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateDeveloper.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateDeveloper proto.InternalMessageInfo

func (m *MsgCreateDeveloper) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCreateDeveloper) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *MsgCreateDeveloper) GetCreatedAt() int32 {
	if m != nil {
		return m.CreatedAt
	}
	return 0
}

func (m *MsgCreateDeveloper) GetUpdatedAt() int32 {
	if m != nil {
		return m.UpdatedAt
	}
	return 0
}

func (m *MsgCreateDeveloper) GetBlocked() bool {
	if m != nil {
		return m.Blocked
	}
	return false
}

type MsgCreateDeveloperResponse struct {
}

func (m *MsgCreateDeveloperResponse) Reset()         { *m = MsgCreateDeveloperResponse{} }
func (m *MsgCreateDeveloperResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateDeveloperResponse) ProtoMessage()    {}
func (*MsgCreateDeveloperResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_82914fe0b56a4e8c, []int{7}
}
func (m *MsgCreateDeveloperResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateDeveloperResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateDeveloperResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateDeveloperResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateDeveloperResponse.Merge(m, src)
}
func (m *MsgCreateDeveloperResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateDeveloperResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateDeveloperResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateDeveloperResponse proto.InternalMessageInfo

type MsgUpdateDeveloper struct {
	Creator   string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Address   string `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	CreatedAt int32  `protobuf:"varint,3,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt int32  `protobuf:"varint,4,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	Blocked   bool   `protobuf:"varint,5,opt,name=blocked,proto3" json:"blocked,omitempty"`
}

func (m *MsgUpdateDeveloper) Reset()         { *m = MsgUpdateDeveloper{} }
func (m *MsgUpdateDeveloper) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateDeveloper) ProtoMessage()    {}
func (*MsgUpdateDeveloper) Descriptor() ([]byte, []int) {
	return fileDescriptor_82914fe0b56a4e8c, []int{8}
}
func (m *MsgUpdateDeveloper) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateDeveloper) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateDeveloper.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateDeveloper) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateDeveloper.Merge(m, src)
}
func (m *MsgUpdateDeveloper) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateDeveloper) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateDeveloper.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateDeveloper proto.InternalMessageInfo

func (m *MsgUpdateDeveloper) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgUpdateDeveloper) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *MsgUpdateDeveloper) GetCreatedAt() int32 {
	if m != nil {
		return m.CreatedAt
	}
	return 0
}

func (m *MsgUpdateDeveloper) GetUpdatedAt() int32 {
	if m != nil {
		return m.UpdatedAt
	}
	return 0
}

func (m *MsgUpdateDeveloper) GetBlocked() bool {
	if m != nil {
		return m.Blocked
	}
	return false
}

type MsgUpdateDeveloperResponse struct {
}

func (m *MsgUpdateDeveloperResponse) Reset()         { *m = MsgUpdateDeveloperResponse{} }
func (m *MsgUpdateDeveloperResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateDeveloperResponse) ProtoMessage()    {}
func (*MsgUpdateDeveloperResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_82914fe0b56a4e8c, []int{9}
}
func (m *MsgUpdateDeveloperResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateDeveloperResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateDeveloperResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateDeveloperResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateDeveloperResponse.Merge(m, src)
}
func (m *MsgUpdateDeveloperResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateDeveloperResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateDeveloperResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateDeveloperResponse proto.InternalMessageInfo

type MsgDeleteDeveloper struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Address string `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
}

func (m *MsgDeleteDeveloper) Reset()         { *m = MsgDeleteDeveloper{} }
func (m *MsgDeleteDeveloper) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteDeveloper) ProtoMessage()    {}
func (*MsgDeleteDeveloper) Descriptor() ([]byte, []int) {
	return fileDescriptor_82914fe0b56a4e8c, []int{10}
}
func (m *MsgDeleteDeveloper) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteDeveloper) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteDeveloper.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteDeveloper) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteDeveloper.Merge(m, src)
}
func (m *MsgDeleteDeveloper) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteDeveloper) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteDeveloper.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteDeveloper proto.InternalMessageInfo

func (m *MsgDeleteDeveloper) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgDeleteDeveloper) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

type MsgDeleteDeveloperResponse struct {
}

func (m *MsgDeleteDeveloperResponse) Reset()         { *m = MsgDeleteDeveloperResponse{} }
func (m *MsgDeleteDeveloperResponse) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteDeveloperResponse) ProtoMessage()    {}
func (*MsgDeleteDeveloperResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_82914fe0b56a4e8c, []int{11}
}
func (m *MsgDeleteDeveloperResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteDeveloperResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteDeveloperResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteDeveloperResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteDeveloperResponse.Merge(m, src)
}
func (m *MsgDeleteDeveloperResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteDeveloperResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteDeveloperResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteDeveloperResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*MsgCreateAdministrator)(nil), "g4alentertainment.g4alchain.permission.MsgCreateAdministrator")
	proto.RegisterType((*MsgCreateAdministratorResponse)(nil), "g4alentertainment.g4alchain.permission.MsgCreateAdministratorResponse")
	proto.RegisterType((*MsgUpdateAdministrator)(nil), "g4alentertainment.g4alchain.permission.MsgUpdateAdministrator")
	proto.RegisterType((*MsgUpdateAdministratorResponse)(nil), "g4alentertainment.g4alchain.permission.MsgUpdateAdministratorResponse")
	proto.RegisterType((*MsgDeleteAdministrator)(nil), "g4alentertainment.g4alchain.permission.MsgDeleteAdministrator")
	proto.RegisterType((*MsgDeleteAdministratorResponse)(nil), "g4alentertainment.g4alchain.permission.MsgDeleteAdministratorResponse")
	proto.RegisterType((*MsgCreateDeveloper)(nil), "g4alentertainment.g4alchain.permission.MsgCreateDeveloper")
	proto.RegisterType((*MsgCreateDeveloperResponse)(nil), "g4alentertainment.g4alchain.permission.MsgCreateDeveloperResponse")
	proto.RegisterType((*MsgUpdateDeveloper)(nil), "g4alentertainment.g4alchain.permission.MsgUpdateDeveloper")
	proto.RegisterType((*MsgUpdateDeveloperResponse)(nil), "g4alentertainment.g4alchain.permission.MsgUpdateDeveloperResponse")
	proto.RegisterType((*MsgDeleteDeveloper)(nil), "g4alentertainment.g4alchain.permission.MsgDeleteDeveloper")
	proto.RegisterType((*MsgDeleteDeveloperResponse)(nil), "g4alentertainment.g4alchain.permission.MsgDeleteDeveloperResponse")
}

func init() { proto.RegisterFile("g4alchain/permission/tx.proto", fileDescriptor_82914fe0b56a4e8c) }

var fileDescriptor_82914fe0b56a4e8c = []byte{
	// 471 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x96, 0xcd, 0xae, 0xd2, 0x40,
	0x14, 0xc7, 0x19, 0xaf, 0xd7, 0xeb, 0x9d, 0x8d, 0x49, 0x4d, 0x4c, 0xd3, 0x60, 0xd3, 0x10, 0x63,
	0xba, 0xa1, 0x4d, 0x94, 0x15, 0x26, 0x26, 0x20, 0x7e, 0x2c, 0x60, 0xd3, 0x84, 0x8d, 0xbb, 0xd2,
	0x9e, 0x94, 0xc6, 0xb6, 0xd3, 0xcc, 0x0c, 0x06, 0xdf, 0x42, 0x1f, 0x40, 0x13, 0x7d, 0x1a, 0x97,
	0x2c, 0x5d, 0x1a, 0x78, 0x11, 0xd3, 0xe9, 0x07, 0x50, 0x07, 0x62, 0xc1, 0x05, 0xcb, 0x99, 0x33,
	0xe7, 0x7f, 0x7e, 0x67, 0x0e, 0x7f, 0xa6, 0xf8, 0x71, 0xd0, 0x73, 0x23, 0x6f, 0xee, 0x86, 0x89,
	0x9d, 0x02, 0x8d, 0x43, 0xc6, 0x42, 0x92, 0xd8, 0x7c, 0x69, 0xa5, 0x94, 0x70, 0xa2, 0x3c, 0xcd,
	0xc2, 0x90, 0x70, 0xa0, 0xdc, 0x0d, 0x93, 0x18, 0x12, 0x6e, 0x55, 0x09, 0xd6, 0x36, 0x41, 0x33,
	0xa5, 0x32, 0xae, 0x1f, 0x87, 0x49, 0xc8, 0x38, 0x75, 0x39, 0xa1, 0xb9, 0xa2, 0xf6, 0x44, 0x7a,
	0xd2, 0x87, 0x8f, 0x10, 0x91, 0x14, 0x8a, 0x53, 0x9d, 0x1f, 0x08, 0x3f, 0x9a, 0xb0, 0xe0, 0x15,
	0x05, 0x97, 0xc3, 0x60, 0x57, 0x46, 0x51, 0xf1, 0x8d, 0x97, 0x6d, 0x13, 0xaa, 0x22, 0x03, 0x99,
	0xb7, 0x4e, 0xb9, 0xcc, 0x22, 0xae, 0xef, 0x53, 0x60, 0x4c, 0xbd, 0x93, 0x47, 0x8a, 0xa5, 0xd2,
	0xc6, 0xb7, 0xe2, 0x10, 0xf8, 0x03, 0xae, 0x5e, 0x19, 0xc8, 0xbc, 0x76, 0xb6, 0x1b, 0x59, 0x74,
	0x91, 0xfa, 0x45, 0xf4, 0x6e, 0x1e, 0xad, 0x36, 0x32, 0xd5, 0x59, 0x44, 0xbc, 0x0f, 0xe0, 0xab,
	0xd7, 0x06, 0x32, 0xef, 0x3b, 0xe5, 0xb2, 0x63, 0x60, 0x5d, 0xce, 0xe8, 0x00, 0x4b, 0x49, 0xc2,
	0xa0, 0x6c, 0x63, 0x2a, 0xc4, 0x2e, 0xbb, 0x0d, 0x09, 0x63, 0xd5, 0xc6, 0x58, 0x74, 0x31, 0x82,
	0x08, 0xfe, 0x43, 0x17, 0x45, 0x3d, 0x89, 0x5a, 0x55, 0xef, 0x1b, 0xc2, 0x4a, 0x75, 0xb3, 0xa3,
	0xf2, 0xa7, 0x71, 0x41, 0x57, 0xd6, 0xc6, 0xda, 0xdf, 0x7c, 0x75, 0xfc, 0xfc, 0x46, 0x2f, 0x17,
	0xbf, 0xc6, 0x57, 0xe1, 0xbf, 0x13, 0xf4, 0xf9, 0x7c, 0xce, 0xa2, 0x2f, 0xea, 0xd4, 0x94, 0xca,
	0x3a, 0xcf, 0xbe, 0xdf, 0xe0, 0xab, 0x09, 0x0b, 0x94, 0xaf, 0x08, 0x3f, 0x94, 0x19, 0xfd, 0xa5,
	0xf5, 0x6f, 0x7f, 0x3e, 0x96, 0xdc, 0x84, 0xda, 0x9b, 0xf3, 0xf2, 0x4b, 0x4e, 0xc1, 0x27, 0x73,
	0x70, 0x13, 0x3e, 0x49, 0x7e, 0x23, 0xbe, 0x23, 0xee, 0x14, 0x7c, 0x32, 0x6f, 0x36, 0xe1, 0x93,
	0xe4, 0x37, 0xe2, 0x3b, 0xe2, 0x66, 0xe5, 0x0b, 0xc2, 0x0f, 0xea, 0x56, 0xee, 0x37, 0x9e, 0x4d,
	0x95, 0xab, 0x0d, 0x4f, 0xcf, 0xdd, 0x63, 0xaa, 0xfb, 0xb3, 0xdf, 0x78, 0x1e, 0xa7, 0x31, 0x1d,
	0xf0, 0x9d, 0x60, 0xaa, 0xbb, 0xae, 0xdf, 0x78, 0x06, 0xa7, 0x31, 0x1d, 0xf0, 0xe8, 0x70, 0xfa,
	0x73, 0xad, 0xa3, 0xd5, 0x5a, 0x47, 0xbf, 0xd7, 0x3a, 0xfa, 0xbc, 0xd1, 0x5b, 0xab, 0x8d, 0xde,
	0xfa, 0xb5, 0xd1, 0x5b, 0xef, 0x5f, 0x04, 0x21, 0x9f, 0x2f, 0x66, 0x96, 0x47, 0x62, 0xfb, 0x6d,
	0x6f, 0x30, 0xee, 0xbe, 0xde, 0x2d, 0x64, 0x67, 0x85, 0xba, 0xf9, 0x33, 0xbf, 0xdc, 0xfb, 0xb2,
	0xf8, 0x94, 0x02, 0x9b, 0xdd, 0x13, 0xaf, 0xfc, 0xf3, 0x3f, 0x01, 0x00, 0x00, 0xff, 0xff, 0xb3,
	0x9b, 0x1a, 0x84, 0x7e, 0x08, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MsgClient is the client API for Msg service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MsgClient interface {
	CreateAdministrator(ctx context.Context, in *MsgCreateAdministrator, opts ...grpc.CallOption) (*MsgCreateAdministratorResponse, error)
	UpdateAdministrator(ctx context.Context, in *MsgUpdateAdministrator, opts ...grpc.CallOption) (*MsgUpdateAdministratorResponse, error)
	DeleteAdministrator(ctx context.Context, in *MsgDeleteAdministrator, opts ...grpc.CallOption) (*MsgDeleteAdministratorResponse, error)
	CreateDeveloper(ctx context.Context, in *MsgCreateDeveloper, opts ...grpc.CallOption) (*MsgCreateDeveloperResponse, error)
	UpdateDeveloper(ctx context.Context, in *MsgUpdateDeveloper, opts ...grpc.CallOption) (*MsgUpdateDeveloperResponse, error)
	DeleteDeveloper(ctx context.Context, in *MsgDeleteDeveloper, opts ...grpc.CallOption) (*MsgDeleteDeveloperResponse, error)
}

type msgClient struct {
	cc grpc1.ClientConn
}

func NewMsgClient(cc grpc1.ClientConn) MsgClient {
	return &msgClient{cc}
}

func (c *msgClient) CreateAdministrator(ctx context.Context, in *MsgCreateAdministrator, opts ...grpc.CallOption) (*MsgCreateAdministratorResponse, error) {
	out := new(MsgCreateAdministratorResponse)
	err := c.cc.Invoke(ctx, "/g4alentertainment.g4alchain.permission.Msg/CreateAdministrator", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdateAdministrator(ctx context.Context, in *MsgUpdateAdministrator, opts ...grpc.CallOption) (*MsgUpdateAdministratorResponse, error) {
	out := new(MsgUpdateAdministratorResponse)
	err := c.cc.Invoke(ctx, "/g4alentertainment.g4alchain.permission.Msg/UpdateAdministrator", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) DeleteAdministrator(ctx context.Context, in *MsgDeleteAdministrator, opts ...grpc.CallOption) (*MsgDeleteAdministratorResponse, error) {
	out := new(MsgDeleteAdministratorResponse)
	err := c.cc.Invoke(ctx, "/g4alentertainment.g4alchain.permission.Msg/DeleteAdministrator", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CreateDeveloper(ctx context.Context, in *MsgCreateDeveloper, opts ...grpc.CallOption) (*MsgCreateDeveloperResponse, error) {
	out := new(MsgCreateDeveloperResponse)
	err := c.cc.Invoke(ctx, "/g4alentertainment.g4alchain.permission.Msg/CreateDeveloper", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdateDeveloper(ctx context.Context, in *MsgUpdateDeveloper, opts ...grpc.CallOption) (*MsgUpdateDeveloperResponse, error) {
	out := new(MsgUpdateDeveloperResponse)
	err := c.cc.Invoke(ctx, "/g4alentertainment.g4alchain.permission.Msg/UpdateDeveloper", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) DeleteDeveloper(ctx context.Context, in *MsgDeleteDeveloper, opts ...grpc.CallOption) (*MsgDeleteDeveloperResponse, error) {
	out := new(MsgDeleteDeveloperResponse)
	err := c.cc.Invoke(ctx, "/g4alentertainment.g4alchain.permission.Msg/DeleteDeveloper", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MsgServer is the server API for Msg service.
type MsgServer interface {
	CreateAdministrator(context.Context, *MsgCreateAdministrator) (*MsgCreateAdministratorResponse, error)
	UpdateAdministrator(context.Context, *MsgUpdateAdministrator) (*MsgUpdateAdministratorResponse, error)
	DeleteAdministrator(context.Context, *MsgDeleteAdministrator) (*MsgDeleteAdministratorResponse, error)
	CreateDeveloper(context.Context, *MsgCreateDeveloper) (*MsgCreateDeveloperResponse, error)
	UpdateDeveloper(context.Context, *MsgUpdateDeveloper) (*MsgUpdateDeveloperResponse, error)
	DeleteDeveloper(context.Context, *MsgDeleteDeveloper) (*MsgDeleteDeveloperResponse, error)
}

// UnimplementedMsgServer can be embedded to have forward compatible implementations.
type UnimplementedMsgServer struct {
}

func (*UnimplementedMsgServer) CreateAdministrator(ctx context.Context, req *MsgCreateAdministrator) (*MsgCreateAdministratorResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateAdministrator not implemented")
}
func (*UnimplementedMsgServer) UpdateAdministrator(ctx context.Context, req *MsgUpdateAdministrator) (*MsgUpdateAdministratorResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateAdministrator not implemented")
}
func (*UnimplementedMsgServer) DeleteAdministrator(ctx context.Context, req *MsgDeleteAdministrator) (*MsgDeleteAdministratorResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteAdministrator not implemented")
}
func (*UnimplementedMsgServer) CreateDeveloper(ctx context.Context, req *MsgCreateDeveloper) (*MsgCreateDeveloperResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateDeveloper not implemented")
}
func (*UnimplementedMsgServer) UpdateDeveloper(ctx context.Context, req *MsgUpdateDeveloper) (*MsgUpdateDeveloperResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateDeveloper not implemented")
}
func (*UnimplementedMsgServer) DeleteDeveloper(ctx context.Context, req *MsgDeleteDeveloper) (*MsgDeleteDeveloperResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteDeveloper not implemented")
}

func RegisterMsgServer(s grpc1.Server, srv MsgServer) {
	s.RegisterService(&_Msg_serviceDesc, srv)
}

func _Msg_CreateAdministrator_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateAdministrator)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateAdministrator(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/g4alentertainment.g4alchain.permission.Msg/CreateAdministrator",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateAdministrator(ctx, req.(*MsgCreateAdministrator))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdateAdministrator_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateAdministrator)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateAdministrator(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/g4alentertainment.g4alchain.permission.Msg/UpdateAdministrator",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateAdministrator(ctx, req.(*MsgUpdateAdministrator))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_DeleteAdministrator_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgDeleteAdministrator)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).DeleteAdministrator(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/g4alentertainment.g4alchain.permission.Msg/DeleteAdministrator",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).DeleteAdministrator(ctx, req.(*MsgDeleteAdministrator))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CreateDeveloper_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateDeveloper)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateDeveloper(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/g4alentertainment.g4alchain.permission.Msg/CreateDeveloper",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateDeveloper(ctx, req.(*MsgCreateDeveloper))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdateDeveloper_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateDeveloper)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateDeveloper(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/g4alentertainment.g4alchain.permission.Msg/UpdateDeveloper",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateDeveloper(ctx, req.(*MsgUpdateDeveloper))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_DeleteDeveloper_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgDeleteDeveloper)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).DeleteDeveloper(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/g4alentertainment.g4alchain.permission.Msg/DeleteDeveloper",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).DeleteDeveloper(ctx, req.(*MsgDeleteDeveloper))
	}
	return interceptor(ctx, in, info, handler)
}

var _Msg_serviceDesc = grpc.ServiceDesc{
	ServiceName: "g4alentertainment.g4alchain.permission.Msg",
	HandlerType: (*MsgServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateAdministrator",
			Handler:    _Msg_CreateAdministrator_Handler,
		},
		{
			MethodName: "UpdateAdministrator",
			Handler:    _Msg_UpdateAdministrator_Handler,
		},
		{
			MethodName: "DeleteAdministrator",
			Handler:    _Msg_DeleteAdministrator_Handler,
		},
		{
			MethodName: "CreateDeveloper",
			Handler:    _Msg_CreateDeveloper_Handler,
		},
		{
			MethodName: "UpdateDeveloper",
			Handler:    _Msg_UpdateDeveloper_Handler,
		},
		{
			MethodName: "DeleteDeveloper",
			Handler:    _Msg_DeleteDeveloper_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "g4alchain/permission/tx.proto",
}

func (m *MsgCreateAdministrator) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateAdministrator) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateAdministrator) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Blocked {
		i--
		if m.Blocked {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x28
	}
	if m.UpdatedAt != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.UpdatedAt))
		i--
		dAtA[i] = 0x20
	}
	if m.CreatedAt != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.CreatedAt))
		i--
		dAtA[i] = 0x18
	}
	if len(m.Address) > 0 {
		i -= len(m.Address)
		copy(dAtA[i:], m.Address)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Address)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateAdministratorResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateAdministratorResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateAdministratorResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgUpdateAdministrator) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateAdministrator) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateAdministrator) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Blocked {
		i--
		if m.Blocked {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x28
	}
	if m.UpdatedAt != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.UpdatedAt))
		i--
		dAtA[i] = 0x20
	}
	if m.CreatedAt != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.CreatedAt))
		i--
		dAtA[i] = 0x18
	}
	if len(m.Address) > 0 {
		i -= len(m.Address)
		copy(dAtA[i:], m.Address)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Address)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateAdministratorResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateAdministratorResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateAdministratorResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgDeleteAdministrator) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteAdministrator) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteAdministrator) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Address) > 0 {
		i -= len(m.Address)
		copy(dAtA[i:], m.Address)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Address)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDeleteAdministratorResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteAdministratorResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteAdministratorResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgCreateDeveloper) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateDeveloper) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateDeveloper) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Blocked {
		i--
		if m.Blocked {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x28
	}
	if m.UpdatedAt != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.UpdatedAt))
		i--
		dAtA[i] = 0x20
	}
	if m.CreatedAt != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.CreatedAt))
		i--
		dAtA[i] = 0x18
	}
	if len(m.Address) > 0 {
		i -= len(m.Address)
		copy(dAtA[i:], m.Address)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Address)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateDeveloperResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateDeveloperResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateDeveloperResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgUpdateDeveloper) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateDeveloper) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateDeveloper) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Blocked {
		i--
		if m.Blocked {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x28
	}
	if m.UpdatedAt != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.UpdatedAt))
		i--
		dAtA[i] = 0x20
	}
	if m.CreatedAt != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.CreatedAt))
		i--
		dAtA[i] = 0x18
	}
	if len(m.Address) > 0 {
		i -= len(m.Address)
		copy(dAtA[i:], m.Address)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Address)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateDeveloperResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateDeveloperResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateDeveloperResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgDeleteDeveloper) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteDeveloper) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteDeveloper) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Address) > 0 {
		i -= len(m.Address)
		copy(dAtA[i:], m.Address)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Address)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDeleteDeveloperResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteDeveloperResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteDeveloperResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func encodeVarintTx(dAtA []byte, offset int, v uint64) int {
	offset -= sovTx(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *MsgCreateAdministrator) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Address)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.CreatedAt != 0 {
		n += 1 + sovTx(uint64(m.CreatedAt))
	}
	if m.UpdatedAt != 0 {
		n += 1 + sovTx(uint64(m.UpdatedAt))
	}
	if m.Blocked {
		n += 2
	}
	return n
}

func (m *MsgCreateAdministratorResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgUpdateAdministrator) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Address)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.CreatedAt != 0 {
		n += 1 + sovTx(uint64(m.CreatedAt))
	}
	if m.UpdatedAt != 0 {
		n += 1 + sovTx(uint64(m.UpdatedAt))
	}
	if m.Blocked {
		n += 2
	}
	return n
}

func (m *MsgUpdateAdministratorResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgDeleteAdministrator) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Address)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgDeleteAdministratorResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgCreateDeveloper) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Address)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.CreatedAt != 0 {
		n += 1 + sovTx(uint64(m.CreatedAt))
	}
	if m.UpdatedAt != 0 {
		n += 1 + sovTx(uint64(m.UpdatedAt))
	}
	if m.Blocked {
		n += 2
	}
	return n
}

func (m *MsgCreateDeveloperResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgUpdateDeveloper) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Address)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.CreatedAt != 0 {
		n += 1 + sovTx(uint64(m.CreatedAt))
	}
	if m.UpdatedAt != 0 {
		n += 1 + sovTx(uint64(m.UpdatedAt))
	}
	if m.Blocked {
		n += 2
	}
	return n
}

func (m *MsgUpdateDeveloperResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgDeleteDeveloper) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Address)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgDeleteDeveloperResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func sovTx(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozTx(x uint64) (n int) {
	return sovTx(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *MsgCreateAdministrator) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateAdministrator: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateAdministrator: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Address = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreatedAt", wireType)
			}
			m.CreatedAt = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CreatedAt |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UpdatedAt", wireType)
			}
			m.UpdatedAt = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.UpdatedAt |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Blocked", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Blocked = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateAdministratorResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateAdministratorResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateAdministratorResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateAdministrator) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateAdministrator: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateAdministrator: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Address = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreatedAt", wireType)
			}
			m.CreatedAt = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CreatedAt |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UpdatedAt", wireType)
			}
			m.UpdatedAt = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.UpdatedAt |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Blocked", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Blocked = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateAdministratorResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateAdministratorResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateAdministratorResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteAdministrator) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteAdministrator: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteAdministrator: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Address = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteAdministratorResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteAdministratorResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteAdministratorResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateDeveloper) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateDeveloper: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateDeveloper: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Address = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreatedAt", wireType)
			}
			m.CreatedAt = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CreatedAt |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UpdatedAt", wireType)
			}
			m.UpdatedAt = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.UpdatedAt |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Blocked", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Blocked = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateDeveloperResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateDeveloperResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateDeveloperResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateDeveloper) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateDeveloper: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateDeveloper: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Address = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreatedAt", wireType)
			}
			m.CreatedAt = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CreatedAt |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UpdatedAt", wireType)
			}
			m.UpdatedAt = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.UpdatedAt |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Blocked", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Blocked = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateDeveloperResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateDeveloperResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateDeveloperResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteDeveloper) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteDeveloper: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteDeveloper: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Address = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteDeveloperResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteDeveloperResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteDeveloperResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipTx(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowTx
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthTx
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupTx
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthTx
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthTx        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowTx          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupTx = fmt.Errorf("proto: unexpected end of group")
)
